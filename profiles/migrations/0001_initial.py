# Generated by Django 5.2.4 on 2025-08-24 03:39

import common.validators
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('jobs', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='When the record was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the record was last updated.', verbose_name='updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Stable public UUID identifier.', primary_key=True, serialize=False, verbose_name='public id')),
                ('headline', models.CharField(blank=True, help_text='Short professional title.', max_length=160)),
                ('bio', models.TextField(blank=True, help_text='Summary about the candidate.')),
                ('location', models.CharField(blank=True, max_length=120)),
                ('website', models.URLField(blank=True, help_text='Personal website/portfolio.', validators=[django.core.validators.URLValidator()])),
                ('linkedin', models.URLField(blank=True, help_text='LinkedIn URL', validators=[django.core.validators.URLValidator()])),
                ('github', models.URLField(blank=True, help_text='GitHub URL', validators=[django.core.validators.URLValidator()])),
                ('phone', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number with 7â€“15 digits (optionally prefixed by +).', regex='^\\+?[0-9]{7,15}$')])),
                ('resume', models.FileField(blank=True, help_text='Upload CV (PDF/DOCX, max 5 MB).', null=True, upload_to='resumes/%Y/%m/', validators=[common.validators.MaxFileSizeValidator(5), common.validators.AllowedExtensionsValidator(('pdf', 'docx'))])),
                ('skills', models.ManyToManyField(blank=True, help_text='Skills the candidate possesses.', related_name='profiles', to='jobs.skill')),
                ('user', models.OneToOneField(help_text='The account this profile belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'profile',
                'verbose_name_plural': 'profiles',
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='When the record was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the record was last updated.', verbose_name='updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Stable public UUID identifier.', primary_key=True, serialize=False, verbose_name='public id')),
                ('company', models.CharField(max_length=160)),
                ('title', models.CharField(max_length=160)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiences', to='profiles.profile')),
            ],
            options={
                'verbose_name': 'experience',
                'verbose_name_plural': 'experiences',
                'indexes': [models.Index(fields=['profile', 'start_date'], name='exp_profile_start_idx')],
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='When the record was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the record was last updated.', verbose_name='updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Stable public UUID identifier.', primary_key=True, serialize=False, verbose_name='public id')),
                ('institution', models.CharField(max_length=160)),
                ('degree', models.CharField(blank=True, max_length=160)),
                ('field_of_study', models.CharField(blank=True, max_length=160)),
                ('start_year', models.PositiveIntegerField()),
                ('end_year', models.PositiveIntegerField(blank=True, null=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education', to='profiles.profile')),
            ],
            options={
                'verbose_name': 'education',
                'verbose_name_plural': 'education histories',
                'indexes': [models.Index(fields=['profile', 'start_year'], name='edu_profile_start_idx')],
            },
        ),
    ]
