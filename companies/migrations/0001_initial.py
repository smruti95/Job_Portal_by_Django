# Generated by Django 5.2.4 on 2025-08-24 03:32

import django.db.models.deletion
import django.db.models.functions.text
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='When the record was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the record was last updated.', verbose_name='updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Stable public UUID identifier.', primary_key=True, serialize=False, verbose_name='public id')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Soft-active flag for the record.', verbose_name='active?')),
                ('name', models.CharField(db_index=True, help_text='Registered company name.', max_length=200, verbose_name='company name')),
                ('slug', models.SlugField(help_text='URL-friendly identifier, unique across companies.', max_length=220, unique=True, verbose_name='slug')),
                ('website', models.URLField(blank=True, help_text='Official company website.', verbose_name='website')),
                ('industry', models.CharField(blank=True, db_index=True, help_text='Industry sector.', max_length=120, verbose_name='industry')),
                ('size', models.PositiveIntegerField(default=1, help_text='Approximate employee count.', verbose_name='company size')),
                ('city', models.CharField(blank=True, max_length=120)),
                ('country', models.CharField(blank=True, max_length=120)),
                ('about', models.TextField(blank=True, help_text='Public company description.')),
                ('verified', models.BooleanField(db_index=True, default=False, help_text='Whether the company is verified by the platform.')),
                ('owner', models.ForeignKey(help_text='Primary owner of the company.', on_delete=django.db.models.deletion.CASCADE, related_name='companies_owned', to=settings.AUTH_USER_MODEL, verbose_name='owner')),
            ],
            options={
                'verbose_name': 'company',
                'verbose_name_plural': 'companies',
            },
        ),
        migrations.CreateModel(
            name='CompanyMember',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='When the record was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the record was last updated.', verbose_name='updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Stable public UUID identifier.', primary_key=True, serialize=False, verbose_name='public id')),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('RECRUITER', 'Recruiter')], db_index=True, default='RECRUITER', help_text='Membership role within the company.', max_length=20)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='companies.company', verbose_name='company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_memberships', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'company member',
                'verbose_name_plural': 'company members',
            },
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(django.db.models.functions.text.Lower('name'), name='companies_name_ci_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['industry', 'country'], name='companies_industry_country_idx'),
        ),
        migrations.AddConstraint(
            model_name='company',
            constraint=models.CheckConstraint(condition=models.Q(('name', ''), _negated=True), name='companies_name_not_blank'),
        ),
        migrations.AddConstraint(
            model_name='companymember',
            constraint=models.UniqueConstraint(fields=('company', 'user'), name='unique_company_user_member'),
        ),
    ]
